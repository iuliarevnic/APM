Id:
13
Execution stack:
Reference(int) a;Reference(int) b;new( b ,105 )

Symbol table:

Output:
[]
File table:

Heap table:

Id:
13
Execution stack:
Reference(int) a
Reference(int) b;new( b ,105 )

Symbol table:

Output:
[]
File table:

Heap table:

Id:
13
Execution stack:
Reference(int) a
Reference(int) b;new( b ,105 )

Symbol table:

Output:
[]
File table:

Heap table:

Id:
13
Execution stack:
Reference(int) b;new( b ,105 )

Symbol table:
a->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
13
Execution stack:
Reference(int) b;new( b ,105 )

Symbol table:
a->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
13
Execution stack:
Reference(int) b
new( b ,105 )

Symbol table:
a->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
13
Execution stack:
Reference(int) b
new( b ,105 )

Symbol table:
a->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
13
Execution stack:
new( b ,105 )

Symbol table:
a->( 0 , int )
b->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
13
Execution stack:
new( b ,105 )

Symbol table:
a->( 0 , int )
b->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
13
Execution stack:

Symbol table:
a->( 0 , int )
b->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 105

Id:
13
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );new( a ,v );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
13
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );new( a ,v );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
13
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );new( a ,v );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
13
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );new( a ,v );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
13
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );new( a ,v );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
13
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );new( a ,v );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
13
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );new( a ,v );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
13
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );new( a ,v );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
13
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );new( a ,v );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
13
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );new( a ,v );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
13
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );new( a ,v );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
13
Execution stack:
new( a ,v );new( v ,30 );new( a ,v );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
13
Execution stack:
new( a ,v );new( v ,30 );new( a ,v );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
13
Execution stack:
new( a ,v )
new( v ,30 );new( a ,v );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
13
Execution stack:
new( a ,v )
new( v ,30 );new( a ,v );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
13
Execution stack:
new( v ,30 );new( a ,v );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
13
Execution stack:
new( v ,30 );new( a ,v );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
13
Execution stack:
new( v ,30 )
new( a ,v );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
13
Execution stack:
new( v ,30 )
new( a ,v );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
13
Execution stack:
new( a ,v );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
13
Execution stack:
new( a ,v );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
13
Execution stack:
new( a ,v )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
13
Execution stack:
new( a ,v )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
13
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 4 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30
4 --> ( 3 , int )

Id:
13
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 4 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
3 --> 30
4 --> ( 3 , int )

Id:
13
Execution stack:

Symbol table:
a->( 4 , Reference(int) )
v->( 3 , int )

Output:
[30]
File table:

Heap table:
3 --> 30
4 --> ( 3 , int )

Id:
13
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
13
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
13
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
13
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
13
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
13
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
13
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
13
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
13
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
13
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
13
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
13
Execution stack:
new( a ,v );new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
13
Execution stack:
new( a ,v );new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
13
Execution stack:
new( a ,v )
new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
13
Execution stack:
new( a ,v )
new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
13
Execution stack:
new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
13
Execution stack:
new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
13
Execution stack:
new( v ,30 )
writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
13
Execution stack:
new( v ,30 )
writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
13
Execution stack:
writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
13
Execution stack:
writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
13
Execution stack:
writeHeap( a, v )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
13
Execution stack:
writeHeap( a, v )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
13
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 3 , int )
3 --> 30

Id:
13
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
2 --> ( 3 , int )
3 --> 30

Id:
13
Execution stack:

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[30]
File table:

Heap table:
2 --> ( 3 , int )
3 --> 30

Id:
13
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Latchtable:

Barriertable:

Id:
13
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Latchtable:

Barriertable:

Id:
13
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Latchtable:

Barriertable:

Id:
13
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Latchtable:

Barriertable:

Id:
13
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Latchtable:

Barriertable:

Id:
13
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Latchtable:

Barriertable:

Id:
13
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Latchtable:

Barriertable:

Id:
13
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Latchtable:

Barriertable:

Id:
13
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Latchtable:

Barriertable:

Id:
13
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Latchtable:

Barriertable:

Id:
13
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Latchtable:

Barriertable:

Id:
13
Execution stack:
new( a ,v );new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Latchtable:

Barriertable:

Id:
13
Execution stack:
new( a ,v );new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Latchtable:

Barriertable:

Id:
13
Execution stack:
new( a ,v )
new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Latchtable:

Barriertable:

Id:
13
Execution stack:
new( a ,v )
new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Latchtable:

Barriertable:

Id:
13
Execution stack:
new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Latchtable:

Barriertable:

Id:
13
Execution stack:
new( v ,30 );writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Latchtable:

Barriertable:

Id:
13
Execution stack:
new( v ,30 )
writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Latchtable:

Barriertable:

Id:
13
Execution stack:
new( v ,30 )
writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Latchtable:

Barriertable:

Id:
13
Execution stack:
writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Latchtable:

Barriertable:

Id:
13
Execution stack:
writeHeap( a, v );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Latchtable:

Barriertable:

Id:
13
Execution stack:
writeHeap( a, v )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Latchtable:

Barriertable:

Id:
13
Execution stack:
writeHeap( a, v )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Latchtable:

Barriertable:

Id:
13
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 3 , int )
3 --> 30

Latchtable:

Barriertable:

Id:
13
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
2 --> ( 3 , int )
3 --> 30

Latchtable:

Barriertable:

Id:
13
Execution stack:

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[30]
File table:

Heap table:
2 --> ( 3 , int )
3 --> 30

Latchtable:

Barriertable:

