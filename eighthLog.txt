Id:
10
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
10
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
10
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
10
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
10
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
10
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
10
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
10
Execution stack:
Reference(int) v;new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
10
Execution stack:
Reference(int) v;new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
10
Execution stack:
Reference(int) v
new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
10
Execution stack:
Reference(int) v
new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
10
Execution stack:
new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
10
Execution stack:
new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
10
Execution stack:
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
10
Execution stack:
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
10
Execution stack:
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
10
Execution stack:
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
10
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
10
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
10
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
10
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
10
Execution stack:

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[20]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v
new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v
new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[20]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v
new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v
new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[20]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v
new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v
new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[20]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v
new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v
new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[20]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v
new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v
new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[20]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v;new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v
new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v
new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 )
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
Reference(Reference(int)) a
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v )
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[20]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[20]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[20]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[20]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[20]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
9
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
9
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
9
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
9
Execution stack:

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[20]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
10
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
10
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
10
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
10
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
10
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
10
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
10
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
10
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
10
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
10
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
10
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
10
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
10
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
10
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
10
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
10
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
10
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
10
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
10
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
10
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
10
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
10
Execution stack:

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[20]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
10
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
10
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
10
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
10
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
10
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
10
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
10
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
10
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
10
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
10
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
10
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
10
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
10
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
10
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
10
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
10
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
10
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
10
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
10
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
10
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
10
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
10
Execution stack:

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[20]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
8
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
8
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
8
Execution stack:

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[20]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
8
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
8
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
8
Execution stack:

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[20]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
8
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
8
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
8
Execution stack:

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[20]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
8
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
8
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
8
Execution stack:

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[20]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
8
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
8
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
8
Execution stack:

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[20]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
8
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
8
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
8
Execution stack:

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[20]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
8
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
8
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
8
Execution stack:

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[20]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
8
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
8
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
8
Execution stack:

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[20]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
8
Execution stack:
Reference(int) v;new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
Reference(int) v
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 );Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
new( v ,20 )
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 0 , int )

Output:
[]
File table:

Heap table:

Id:
8
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
Reference(Reference(int)) a;new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
Reference(Reference(int)) a
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v );new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( a ,v )
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 0 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20

Id:
8
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
new( v ,30 );print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
new( v ,30 )
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 1 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )

Id:
8
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
8
Execution stack:
print(readHeap( readHeap( a ) ))

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

Id:
8
Execution stack:

Symbol table:
a->( 2 , Reference(int) )
v->( 3 , int )

Output:
[20]
File table:

Heap table:
1 --> 20
2 --> ( 1 , int )
3 --> 30

