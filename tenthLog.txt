Id:
10
Execution stack:
int v;Reference(int) a;v = 10;new( a ,22 );Fork(writeHeap( a, 30 );v = 32;print(v);print(readHeap( a )));print(v);print(readHeap( a ))

Symbol table:

Output:
[]
File table:

Heap table:

Barriertable:

Id:
10
Execution stack:
int v
Reference(int) a;v = 10;new( a ,22 );Fork(writeHeap( a, 30 );v = 32;print(v);print(readHeap( a )));print(v);print(readHeap( a ))

Symbol table:

Output:
[]
File table:

Heap table:

Barriertable:

Id:
10
Execution stack:
int v
Reference(int) a;v = 10;new( a ,22 );Fork(writeHeap( a, 30 );v = 32;print(v);print(readHeap( a )));print(v);print(readHeap( a ))

Symbol table:

Output:
[]
File table:

Heap table:

Barriertable:

Id:
10
Execution stack:
Reference(int) a;v = 10;new( a ,22 );Fork(writeHeap( a, 30 );v = 32;print(v);print(readHeap( a )));print(v);print(readHeap( a ))

Symbol table:
v->0

Output:
[]
File table:

Heap table:

Barriertable:

Id:
10
Execution stack:
Reference(int) a;v = 10;new( a ,22 );Fork(writeHeap( a, 30 );v = 32;print(v);print(readHeap( a )));print(v);print(readHeap( a ))

Symbol table:
v->0

Output:
[]
File table:

Heap table:

Barriertable:

Id:
10
Execution stack:
Reference(int) a
v = 10;new( a ,22 );Fork(writeHeap( a, 30 );v = 32;print(v);print(readHeap( a )));print(v);print(readHeap( a ))

Symbol table:
v->0

Output:
[]
File table:

Heap table:

Barriertable:

Id:
10
Execution stack:
Reference(int) a
v = 10;new( a ,22 );Fork(writeHeap( a, 30 );v = 32;print(v);print(readHeap( a )));print(v);print(readHeap( a ))

Symbol table:
v->0

Output:
[]
File table:

Heap table:

Barriertable:

Id:
10
Execution stack:
v = 10;new( a ,22 );Fork(writeHeap( a, 30 );v = 32;print(v);print(readHeap( a )));print(v);print(readHeap( a ))

Symbol table:
a->( 0 , int )
v->0

Output:
[]
File table:

Heap table:

Barriertable:

Id:
10
Execution stack:
v = 10;new( a ,22 );Fork(writeHeap( a, 30 );v = 32;print(v);print(readHeap( a )));print(v);print(readHeap( a ))

Symbol table:
a->( 0 , int )
v->0

Output:
[]
File table:

Heap table:

Barriertable:

Id:
10
Execution stack:
v = 10
new( a ,22 );Fork(writeHeap( a, 30 );v = 32;print(v);print(readHeap( a )));print(v);print(readHeap( a ))

Symbol table:
a->( 0 , int )
v->0

Output:
[]
File table:

Heap table:

Barriertable:

Id:
10
Execution stack:
v = 10
new( a ,22 );Fork(writeHeap( a, 30 );v = 32;print(v);print(readHeap( a )));print(v);print(readHeap( a ))

Symbol table:
a->( 0 , int )
v->0

Output:
[]
File table:

Heap table:

Barriertable:

Id:
10
Execution stack:
new( a ,22 );Fork(writeHeap( a, 30 );v = 32;print(v);print(readHeap( a )));print(v);print(readHeap( a ))

Symbol table:
a->( 0 , int )
v->10

Output:
[]
File table:

Heap table:

Barriertable:

Id:
10
Execution stack:
new( a ,22 );Fork(writeHeap( a, 30 );v = 32;print(v);print(readHeap( a )));print(v);print(readHeap( a ))

Symbol table:
a->( 0 , int )
v->10

Output:
[]
File table:

Heap table:

Barriertable:

Id:
10
Execution stack:
new( a ,22 )
Fork(writeHeap( a, 30 );v = 32;print(v);print(readHeap( a )));print(v);print(readHeap( a ))

Symbol table:
a->( 0 , int )
v->10

Output:
[]
File table:

Heap table:

Barriertable:

Id:
10
Execution stack:
new( a ,22 )
Fork(writeHeap( a, 30 );v = 32;print(v);print(readHeap( a )));print(v);print(readHeap( a ))

Symbol table:
a->( 0 , int )
v->10

Output:
[]
File table:

Heap table:

Barriertable:

Id:
10
Execution stack:
Fork(writeHeap( a, 30 );v = 32;print(v);print(readHeap( a )));print(v);print(readHeap( a ))

Symbol table:
a->( 1 , int )
v->10

Output:
[]
File table:

Heap table:
1 --> 22

Barriertable:

Id:
10
Execution stack:
Fork(writeHeap( a, 30 );v = 32;print(v);print(readHeap( a )));print(v);print(readHeap( a ))

Symbol table:
a->( 1 , int )
v->10

Output:
[]
File table:

Heap table:
1 --> 22

Barriertable:

Id:
10
Execution stack:
Fork(writeHeap( a, 30 );v = 32;print(v);print(readHeap( a )))
print(v);print(readHeap( a ))

Symbol table:
a->( 1 , int )
v->10

Output:
[]
File table:

Heap table:
1 --> 22

Barriertable:

Id:
10
Execution stack:
Fork(writeHeap( a, 30 );v = 32;print(v);print(readHeap( a )))
print(v);print(readHeap( a ))

Symbol table:
a->( 1 , int )
v->10

Output:
[]
File table:

Heap table:
1 --> 22

Barriertable:

Id:
10
Execution stack:
print(v);print(readHeap( a ))

Symbol table:
a->( 1 , int )
v->10

Output:
[]
File table:

Heap table:
1 --> 22

Barriertable:

Id:
14
Execution stack:
writeHeap( a, 30 );v = 32;print(v);print(readHeap( a ))

Symbol table:
a->( 1 , int )
v->10

Output:
[]
File table:

Heap table:
1 --> 22

Barriertable:

Id:
10
Execution stack:
print(v);print(readHeap( a ))

Symbol table:
a->( 1 , int )
v->10

Output:
[]
File table:

Heap table:
1 --> 22

Barriertable:

Id:
14
Execution stack:
writeHeap( a, 30 );v = 32;print(v);print(readHeap( a ))

Symbol table:
a->( 1 , int )
v->10

Output:
[]
File table:

Heap table:
1 --> 22

Barriertable:

Id:
10
Execution stack:
print(v)
print(readHeap( a ))

Symbol table:
a->( 1 , int )
v->10

Output:
[]
File table:

Heap table:
1 --> 22

Barriertable:

Id:
14
Execution stack:
writeHeap( a, 30 )
v = 32;print(v);print(readHeap( a ))

Symbol table:
a->( 1 , int )
v->10

Output:
[]
File table:

Heap table:
1 --> 22

Barriertable:

Id:
10
Execution stack:
print(v)
print(readHeap( a ))

Symbol table:
a->( 1 , int )
v->10

Output:
[]
File table:

Heap table:
1 --> 22

Barriertable:

Id:
14
Execution stack:
writeHeap( a, 30 )
v = 32;print(v);print(readHeap( a ))

Symbol table:
a->( 1 , int )
v->10

Output:
[]
File table:

Heap table:
1 --> 22

Barriertable:

Id:
10
Execution stack:
print(readHeap( a ))

Symbol table:
a->( 1 , int )
v->10

Output:
[10]
File table:

Heap table:
1 --> 30

Barriertable:

Id:
14
Execution stack:
v = 32;print(v);print(readHeap( a ))

Symbol table:
a->( 1 , int )
v->10

Output:
[10]
File table:

Heap table:
1 --> 30

Barriertable:

Id:
10
Execution stack:
print(readHeap( a ))

Symbol table:
a->( 1 , int )
v->10

Output:
[10]
File table:

Heap table:
1 --> 30

Barriertable:

Id:
14
Execution stack:
v = 32;print(v);print(readHeap( a ))

Symbol table:
a->( 1 , int )
v->10

Output:
[10]
File table:

Heap table:
1 --> 30

Barriertable:

Id:
10
Execution stack:

Symbol table:
a->( 1 , int )
v->10

Output:
[10, 30]
File table:

Heap table:
1 --> 30

Barriertable:

Id:
14
Execution stack:
v = 32
print(v);print(readHeap( a ))

Symbol table:
a->( 1 , int )
v->10

Output:
[10, 30]
File table:

Heap table:
1 --> 30

Barriertable:

Id:
14
Execution stack:
v = 32
print(v);print(readHeap( a ))

Symbol table:
a->( 1 , int )
v->10

Output:
[10, 30]
File table:

Heap table:
1 --> 30

Barriertable:

Id:
14
Execution stack:
print(v);print(readHeap( a ))

Symbol table:
a->( 1 , int )
v->32

Output:
[10, 30]
File table:

Heap table:
1 --> 30

Barriertable:

Id:
14
Execution stack:
print(v);print(readHeap( a ))

Symbol table:
a->( 1 , int )
v->32

Output:
[10, 30]
File table:

Heap table:
1 --> 30

Barriertable:

Id:
14
Execution stack:
print(v)
print(readHeap( a ))

Symbol table:
a->( 1 , int )
v->32

Output:
[10, 30]
File table:

Heap table:
1 --> 30

Barriertable:

Id:
14
Execution stack:
print(v)
print(readHeap( a ))

Symbol table:
a->( 1 , int )
v->32

Output:
[10, 30]
File table:

Heap table:
1 --> 30

Barriertable:

Id:
14
Execution stack:
print(readHeap( a ))

Symbol table:
a->( 1 , int )
v->32

Output:
[10, 30, 32]
File table:

Heap table:
1 --> 30

Barriertable:

Id:
14
Execution stack:
print(readHeap( a ))

Symbol table:
a->( 1 , int )
v->32

Output:
[10, 30, 32]
File table:

Heap table:
1 --> 30

Barriertable:

Id:
14
Execution stack:

Symbol table:
a->( 1 , int )
v->32

Output:
[10, 30, 32, 30]
File table:

Heap table:
1 --> 30

Barriertable:

